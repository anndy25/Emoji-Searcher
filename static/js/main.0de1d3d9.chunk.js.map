{"version":3,"sources":["components/EmojiSearcher.jsx","App.js","index.js"],"names":["EmojiSearcher","useState","emojis","setEmojis","value","setValue","words","setWords","useEffect","emojiGet","a","emojiData","slice","em","filter","e","slug","toLowerCase","includes","className","style","height","id","for","name","onChange","target","placeholder","autocomplete","minHeight","fontSize","type","backgroundColor","map","elm","index","onClick","character","cursor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAuFeA,EAhFO,WAClB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACAC,qBAAU,WACN,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sDACC,KAAVN,GACAD,EAAUQ,EAAUC,MAAM,EAAE,MACpBD,IAGFE,EAAKF,EAAUG,QAAO,SAACC,GAAD,OAAOA,EAAEC,KAAKC,cAAcC,SAASd,EAAMa,kBACvEd,EAAUU,IAPD,2CAAH,qDAWdJ,MACD,CAACL,IAKJ,OACI,qBAAKe,UAAU,0DAA0DC,MAAO,CAAEC,OAAO,SAAzF,SACI,sBAAKF,UAAU,8EAA8EG,GAAG,aAAhG,UAGI,sBAAKH,UAAU,OAAf,UACI,uBAAOI,IAAI,8BAA8BJ,UAAU,aAAnD,uBAEA,0BAEIA,UAAU,eACVK,KAAK,OACLpB,MAAOE,EACPmB,SAjBD,SAACV,GAChBR,EAASQ,EAAEW,OAAOtB,QAiBFkB,GAAG,8BACHK,YAAY,eACZC,aAAa,MACbR,MAAO,CAAES,UAAW,QAAQC,SAAU,YAG1C,uBAAOP,IAAI,2BAA2BJ,UAAU,eAChD,uBACIY,KAAK,SACLZ,UAAU,eACVK,KAAK,SACLpB,MAAOA,EACPqB,SAAU,SAACV,GAAD,OAAOV,EAASU,EAAEW,OAAOtB,QACnCkB,GAAG,2BACHK,YAAY,kBACZC,aAAa,WAIrB,yBAAST,UAAU,oBAAoBC,MAAO,CAAEC,OAAQ,QAAQW,gBAAgB,aAAhF,SACI,qBAAKb,UAAU,WAAf,SAEKjB,EAAO+B,KAAI,SAACC,EAAKC,GACd,OACI,qBAAiBhB,UAAU,uBACvBiB,QAAS,kBAAM7B,EAASD,EAAQ4B,EAAIG,YACpCjB,MAAO,CAAEkB,OAAQ,WAFrB,SAGI,oBAAInB,UAAU,cAAd,SAA6Be,EAAIG,aAH3BF,gBCvD3BI,MATf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACA,cAAC,EAAD,OCAJqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0de1d3d9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../App.css';\r\n\r\n\r\nimport emojiData from './emoji.json';\r\n\r\n\r\nconst EmojiSearcher = () => {\r\n    const [emojis, setEmojis] = useState([]);\r\n    const [value, setValue] = useState(\"\");\r\n    const [words, setWords] = useState(\"\");\r\n    useEffect(() => {\r\n        const emojiGet = async () => {\r\n            if (value === \"\") {\r\n                setEmojis(emojiData.slice(0,120));\r\n                const a=emojiData;\r\n                \r\n            } else {\r\n                const em = emojiData.filter((e) => e.slug.toLowerCase().includes(value.toLowerCase()));\r\n                setEmojis(em);\r\n            }\r\n\r\n        }\r\n        emojiGet();\r\n    }, [value]);\r\n    const changeText = (e) => {\r\n        setWords(e.target.value);\r\n\r\n    }\r\n    return (\r\n        <div className=\" d-flex justify-content-center align-items-center py-4 \" style={{ height:\"100vh\"}} >\r\n            <div className=\"container col-lg-6 border col-sm-11 p-2 shadow-sm p-3 mb-5 bg-body rounded \" id=\"col-common\" >\r\n\r\n\r\n                <div className=\"mb-3\">\r\n                    <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Text Area</label>\r\n\r\n                    <textarea\r\n\r\n                        className=\"form-control\"\r\n                        name=\"desc\"\r\n                        value={words}\r\n                        onChange={changeText}\r\n                        id=\"exampleFormControlTextarea1\"\r\n                        placeholder=\"Text Area...\"\r\n                        autocomplete=\"off\"\r\n                        style={{ minHeight: \"15rem\",fontSize: \"1.2rem\"}}\r\n                    >\r\n                    </textarea>\r\n                    <label for=\"exampleFormControlInput1\" className=\"form-label\"></label>\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        name=\"search\"\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        id=\"exampleFormControlInput1\"\r\n                        placeholder=\"Emoji Search...\"\r\n                        autocomplete=\"off\"\r\n                    />\r\n\r\n                </div>\r\n                <section className=\"overflow-auto p-1\" style={{ height: \"12rem\",backgroundColor:'#f1dbdb14' }}>\r\n                    <div className=\"row  m-0\">\r\n\r\n                        {emojis.map((elm, index) => {\r\n                            return (\r\n                                <div key={index} className=\"col-lg-2 col-2  pt-2\"\r\n                                    onClick={() => setWords(words + elm.character)}\r\n                                    style={{ cursor: \"pointer\" }}>\r\n                                    <h4 className=\"text-center\">{elm.character}</h4>\r\n                                    {/* <small className=\"text-center\" >{elm.slug}</small> */}\r\n                                </div>\r\n                            );\r\n\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </section>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmojiSearcher;\r\n","import EmojiSearcher from './components/EmojiSearcher';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <EmojiSearcher />\n     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}